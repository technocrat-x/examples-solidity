// SPDX-License-Identifier: MIT
// english translation by 22X
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

// Access Control Exploit Example
contract AccessControlExploit is ERC20, Ownable {
    // Constructor: Initialize token name and symbol
    constructor() ERC20("Wrong Access", "WA") {}
    
    // Bad mint function without access control
    function badMint(address to, uint amount) public {
        _mint(to, amount);
    }

    // Good mint function with onlyOwner modifier for access control
    function goodMint(address to, uint amount) public onlyOwner {
        _mint(to, amount);
    }

    // Bad burn function without access control
    function badBurn(address account, uint amount) public {
        _burn(account, amount);
    }

    // Good burn function that checks authorization if burning tokens owned by another account
    function goodBurn(address account, uint amount) public {
        if(msg.sender != account){
            _spendAllowance(account, msg.sender, amount);
        }
        _burn(account, amount);
    }
}
